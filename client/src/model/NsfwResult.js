/**
 * videoapi
 * The video APIs help you convert, encode, and transcode videos.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NsfwScannedFrame'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NsfwScannedFrame'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveVideoApiClient) {
      root.CloudmersiveVideoApiClient = {};
    }
    root.CloudmersiveVideoApiClient.NsfwResult = factory(root.CloudmersiveVideoApiClient.ApiClient, root.CloudmersiveVideoApiClient.NsfwScannedFrame);
  }
}(this, function(ApiClient, NsfwScannedFrame) {
  'use strict';




  /**
   * The NsfwResult model module.
   * @module model/NsfwResult
   * @version 2.0.5
   */

  /**
   * Constructs a new <code>NsfwResult</code>.
   * The result of scanning a video file for NSFW content
   * @alias module:model/NsfwResult
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>NsfwResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NsfwResult} obj Optional instance to populate.
   * @return {module:model/NsfwResult} The populated <code>NsfwResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Successful')) {
        obj['Successful'] = ApiClient.convertToType(data['Successful'], 'Boolean');
      }
      if (data.hasOwnProperty('HighestClassificationResult')) {
        obj['HighestClassificationResult'] = ApiClient.convertToType(data['HighestClassificationResult'], 'String');
      }
      if (data.hasOwnProperty('HighestScore')) {
        obj['HighestScore'] = ApiClient.convertToType(data['HighestScore'], 'Number');
      }
      if (data.hasOwnProperty('TotalRacyFrames')) {
        obj['TotalRacyFrames'] = ApiClient.convertToType(data['TotalRacyFrames'], 'Number');
      }
      if (data.hasOwnProperty('TotalNsfwFrames')) {
        obj['TotalNsfwFrames'] = ApiClient.convertToType(data['TotalNsfwFrames'], 'Number');
      }
      if (data.hasOwnProperty('TotalFrames')) {
        obj['TotalFrames'] = ApiClient.convertToType(data['TotalFrames'], 'Number');
      }
      if (data.hasOwnProperty('NsfwScannedFrames')) {
        obj['NsfwScannedFrames'] = ApiClient.convertToType(data['NsfwScannedFrames'], [NsfwScannedFrame]);
      }
    }
    return obj;
  }

  /**
   * True if the operation was successful, false otherwise
   * @member {Boolean} Successful
   */
  exports.prototype['Successful'] = undefined;
  /**
   * The highest NSFW classification of the video
   * @member {String} HighestClassificationResult
   */
  exports.prototype['HighestClassificationResult'] = undefined;
  /**
   * The highest NSFW score out of all frames scanned
   * @member {Number} HighestScore
   */
  exports.prototype['HighestScore'] = undefined;
  /**
   * The total number of potentially \"racy\" frames.
   * @member {Number} TotalRacyFrames
   */
  exports.prototype['TotalRacyFrames'] = undefined;
  /**
   * The total number of frames with high probability of NSFW.
   * @member {Number} TotalNsfwFrames
   */
  exports.prototype['TotalNsfwFrames'] = undefined;
  /**
   * The total number of frames scanned
   * @member {Number} TotalFrames
   */
  exports.prototype['TotalFrames'] = undefined;
  /**
   * The NSFW scanning results for each frame
   * @member {Array.<module:model/NsfwScannedFrame>} NsfwScannedFrames
   */
  exports.prototype['NsfwScannedFrames'] = undefined;



  return exports;
}));


